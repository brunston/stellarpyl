{\rtf1\ansi\deff3\adeflang1025
{\fonttbl{\f0\froman\fprq2\fcharset0 Times New Roman;}{\f1\froman\fprq2\fcharset2 Symbol;}{\f2\fswiss\fprq2\fcharset0 Arial;}{\f3\froman\fprq2\fcharset0 Liberation Serif{\*\falt Times New Roman};}{\f4\froman\fprq0\fcharset128 Times{\*\falt Times New Roman};}{\f5\froman\fprq0\fcharset128 Times New ROman;}{\f6\froman\fprq0\fcharset128 Liberation Serif{\*\falt Times New Roman};}{\f7\fswiss\fprq0\fcharset128 Liberation Sans{\*\falt Arial};}{\f8\froman\fprq2\fcharset128 FreeSerif;}{\f9\fnil\fprq1\fcharset128 Courier 10 Pitch;}{\f10\fnil\fprq1\fcharset128 Ubuntu Mono;}{\f11\fnil\fprq0\fcharset128 FreeSans;}{\f12\fnil\fprq2\fcharset0 FreeSans;}{\f13\fswiss\fprq0\fcharset128 FreeSans;}{\f14\fnil\fprq2\fcharset0 Liberation Serif{\*\falt Times New Roman};}}
{\colortbl;\red0\green0\blue0;\red128\green128\blue128;}
{\stylesheet{\s0\snext0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf1\kerning1\dbch\af11\langfe2052\dbch\af14\afs24\alang1081\loch\f6\fs24\lang1033 Normal;}
{\s15\sbasedon0\snext16\ql\nowidctlpar\sb240\sa120\keepn\ltrpar\cf1\kerning1\dbch\af11\langfe2052\dbch\af12\afs28\alang1081\loch\f7\fs28\lang1033 Heading;}
{\s16\sbasedon0\snext16\sl288\slmult1\ql\nowidctlpar\sb0\sa140\ltrpar\cf1\kerning1\dbch\af11\langfe2052\dbch\af14\afs24\alang1081\loch\f6\fs24\lang1033 Text Body;}
{\s17\sbasedon16\snext17\sl288\slmult1\ql\nowidctlpar\sb0\sa140\ltrpar\cf1\kerning1\dbch\af11\langfe2052\dbch\af13\afs24\alang1081\loch\f6\fs24\lang1033 List;}
{\s18\sbasedon0\snext18\ql\nowidctlpar\sb120\sa120\noline\ltrpar\cf1\i\kerning1\dbch\af11\langfe2052\dbch\af13\afs24\alang1081\ai\loch\f6\fs24\lang1033 Caption;}
{\s19\sbasedon0\snext19\ql\nowidctlpar\noline\ltrpar\cf1\kerning1\dbch\af11\langfe2052\dbch\af13\afs24\alang1081\loch\f6\fs24\lang1033 Index;}
}{\info{\creatim\yr2015\mo7\dy22\hr17\min47}{\revtim\yr0\mo0\dy0\hr0\min0}{\printim\yr0\mo0\dy0\hr0\min0}{\comment LibreOffice}{\vern67241986}}\deftab709
\viewscale100
{\*\pgdsctbl
{\pgdsc0\pgdscuse451\pgwsxn12240\pghsxn15840\marglsxn1134\margrsxn1134\margtsxn1134\margbsxn1134\pgdscnxt0 Default Style;}}
\formshade{\*\pgdscno0}\paperh15840\paperw12240\margl1134\margr1134\margt1134\margb1134\sectd\sbknone\sectunlocked1\pgndec\pgwsxn12240\pghsxn15840\marglsxn1134\margrsxn1134\margtsxn1134\margbsxn1134\ftnbj\ftnstart1\ftnrstcont\ftnnar\aenddoc\aftnrstcont\aftnstart1\aftnnrlc
\pgndec\pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf1\kerning1\dbch\af11\langfe2052\dbch\af14\afs24\alang1081\loch\f6\fs24\lang1033{\cf1\rtlch \ltrch\loch\loch\f3
Description of Algorithm}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf1\kerning1\dbch\af11\langfe2052\dbch\af14\afs24\alang1081\loch\f6\fs24\lang1033\cf1\rtlch \ltrch\loch\loch\f3

\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf1\kerning1\dbch\af11\langfe2052\dbch\af14\afs24\alang1081\loch\f6\fs24\lang1033{\cf1\rtlch \ltrch\loch\loch\f3
crop() is the first function which should be called on an image, using ui.py.}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf1\kerning1\dbch\af11\langfe2052\dbch\af14\afs24\alang1081\loch\f6\fs24\lang1033{\cf1\rtlch \ltrch\loch\loch\f3
This works by taking an image and going line by line to determine if each pixel in an entire row of pixels is less than a specific deletion threshold, determined by the user. The user can either determine this threshold by trial and error or by examining the data generated from using the pixel distribution selection pixel_d() in ui.py. }{\cf1\rtlch \ltrch\loch\loch\f3
Whatever the method of determining this threshold, the user must keep this same threshold in use throughout the rest of the process.}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf1\kerning1\dbch\af11\langfe2052\dbch\af14\afs24\alang1081\loch\f6\fs24\lang1033\cf1\rtlch \ltrch\loch\loch\f3

\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf1\kerning1\dbch\af11\langfe2052\dbch\af14\afs24\alang1081\loch\f6\fs24\lang1033{\cf1\rtlch \ltrch\loch\loch\f3
If the entire row is found to be below that threshold, then the row is deleted. This process is repeated top-to-bottom, bottom-to-top, right-to-left and then left-to-right, with the end goal being to automatically reduce the image 'blackspace' as much as possible.}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf1\kerning1\dbch\af11\langfe2052\dbch\af14\afs24\alang1081\loch\f6\fs24\lang1033\rtlch \ltrch\loch\loch\f3

\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf1\kerning1\dbch\af11\langfe2052\dbch\af14\afs24\alang1081\loch\f6\fs24\lang1033{\cf1\rtlch \ltrch\loch\loch\f3
After feeding an image to crop(), the next step would be to either ask for only an image_regression() or choose an intensity creation and plotting method (the intensity methods will automatically perform regression).}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf1\kerning1\dbch\af11\langfe2052\dbch\af14\afs24\alang1081\loch\f6\fs24\lang1033\rtlch \ltrch\loch\loch\f3

\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf1\kerning1\dbch\af11\langfe2052\dbch\af14\afs24\alang1081\loch\f6\fs24\lang1033{\rtlch \ltrch\loch\loch\f3
The regression is performed using the same threshold }{\rtlch \ltrch\loch\loch\f3
which is requested at the beginning of the ui.py workflow. It will determine the usefulness of pixels based on this threshold\uc2 \u8212\'81\'5canything below this threshold will not be chosen as a pertinent pixel. After collecting the set of pertinent pixels, it uses the numpy least-squares regression function to find the m and c values for the linear function through those pertinent points, returning a tuple: (m, c, [x-values of pertinent pixels], [y-values of pertinent pixels]).\uc1 }
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf1\kerning1\dbch\af11\langfe2052\dbch\af14\afs24\alang1081\loch\f6\fs24\lang1033\rtlch \ltrch\loch\loch\f3

\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf1\kerning1\dbch\af11\langfe2052\dbch\af14\afs24\alang1081\loch\f6\fs24\lang1033{\rtlch \ltrch\loch\loch\f3
After the regression is performed, it is either plotted and shown (with the origin 0,0 being at upper left and having positive values on the y axis lie below it), or the program moves on to one of two intensity plotting functions: intensity_n() or intensity_saa().}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf1\kerning1\dbch\af11\langfe2052\dbch\af14\afs24\alang1081\loch\f6\fs24\lang1033\rtlch \ltrch\loch\loch\f3

\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf1\kerning1\dbch\af11\langfe2052\dbch\af14\afs24\alang1081\loch\f6\fs24\lang1033{\rtlch \ltrch\loch\loch\f3
Intensity_saa() uses a form of spatial antialiasing called super-sampling antialiasing. It is a very simple form of antialiasing where each pixel on a line is sampled at sub-pixel rates. Here, we calculate a line for each pixel along the x-axis of our image. Once we have that pixel, we then calculate the respective y-pixel using the m and c values obtained from the spectral regression. The resulting (x}{\rtlch \ltrch\loch\loch\f3
1}{\rtlch \ltrch\loch\loch\f3
,y}{\rtlch \ltrch\loch\loch\f3
1}{\rtlch \ltrch\loch\loch\f3
) pair is then a point along the spectral trace. We also calculate the line perpendicular to the spectral trace along the cross-dispersion axis by using n = -1/m and a modified point-slope form equation y = n(x \u8211\'3f x1) + y1. }{\rtlch \ltrch\loch\loch\f3
For sub-pixels (currently sampling at tenths of a pixel) located along this line, we follow this algorithm:}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf1\kerning1\dbch\af11\langfe2052\dbch\af14\afs24\alang1081\loch\f6\fs24\lang1033\rtlch \ltrch\loch\loch\f3

\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf1\kerning1\dbch\af11\langfe2052\dbch\af14\afs24\alang1081\loch\f6\fs24\lang1033{\afs20\rtlch \ltrch\loch\fs20\loch\f10
for xpixel in range([x lower bound], [x upper bound-1] at rate 0.1):}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf1\kerning1\dbch\af11\langfe2052\dbch\af14\afs24\alang1081\loch\f6\fs24\lang1033{\afs20\rtlch \ltrch\loch\fs20\loch\f10
\tab get corresponding yvalue for subpixel xpixel along line with slope n passing through (x1,y1)}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf1\kerning1\dbch\af11\langfe2052\dbch\af14\afs24\alang1081\loch\f6\fs24\lang1033{\afs20\rtlch \ltrch\loch\fs20\loch\f10
\tab if yvalue is contained within lower and upper y bounds for the image:\u13\'0d}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf1\kerning1\dbch\af11\langfe2052\dbch\af14\afs24\alang1081\loch\f6\fs24\lang1033{\afs20\rtlch \ltrch\loch\fs20\loch\f10
\tab \tab for roundedX in either (floor(xpixel) or ceil(xpixel)):\u13\'0d}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf1\kerning1\dbch\af11\langfe2052\dbch\af14\afs24\alang1081\loch\f6\fs24\lang1033{\afs20\rtlch \ltrch\loch\fs20\loch\f10
\tab \tab \tab for roundedY in either (floor(yvalue) or math.ceil(yvalue)):\u13\'0d}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf1\kerning1\dbch\af11\langfe2052\dbch\af14\afs24\alang1081\loch\f6\fs24\lang1033{\afs20\rtlch \ltrch\loch\fs20\loch\f10
\tab \tab \tab \tab if roundedY is contained within lower and upper y bounds for the image:\u13\'0d}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf1\kerning1\dbch\af11\langfe2052\dbch\af14\afs24\alang1081\loch\f6\fs24\lang1033{\afs20\rtlch \ltrch\loch\fs20\loch\f10
\tab \tab \tab \tab \tab percentX = 1 - abs(xpixel - roundedX)\u13\'0d}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf1\kerning1\dbch\af11\langfe2052\dbch\af14\afs24\alang1081\loch\f6\fs24\lang1033{\afs20\rtlch \ltrch\loch\fs20\loch\f10
\tab \tab \tab \tab \tab percentY = 1 - abs(yvalue - roundedY)\u13\'0d}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf1\kerning1\dbch\af11\langfe2052\dbch\af14\afs24\alang1081\loch\f6\fs24\lang1033{\afs20\rtlch \ltrch\loch\fs20\loch\f10
\tab \tab \tab \tab \tab percent = percentX * percentY\u13\'0d}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf1\kerning1\dbch\af11\langfe2052\dbch\af14\afs24\alang1081\loch\f6\fs24\lang1033{\afs20\rtlch \ltrch\loch\fs20\loch\f10
\tab \tab \tab \tab \tab get value of pixel at (roundedX,roundedY)}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf1\kerning1\dbch\af11\langfe2052\dbch\af14\afs24\alang1081\loch\f6\fs24\lang1033{\afs20\rtlch \ltrch\loch\fs20\loch\f10
\tab \tab \tab \tab \tab [antialiased intensity] = percent * [sum of pixel RGB values]}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf1\kerning1\dbch\af11\langfe2052\dbch\af14\afs24\alang1081\loch\f6\fs24\lang1033{\afs20\rtlch \ltrch\loch\fs20\loch\f10
\tab \tab \tab \tab \tab #to ensure we don't reset a value instead of adding:\u13\'0d}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf1\kerning1\dbch\af11\langfe2052\dbch\af14\afs24\alang1081\loch\f6\fs24\lang1033{\afs20\rtlch \ltrch\loch\fs20\loch\f10
\tab \tab \tab \tab \tab if xpixel in [our set of AA intensity values]:\u13\'0d}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf1\kerning1\dbch\af11\langfe2052\dbch\af14\afs24\alang1081\loch\f6\fs24\lang1033{\afs20\rtlch \ltrch\loch\fs20\loch\f10
\tab \tab \tab \tab \tab \tab add [antialiased intensity] to existing element}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf1\kerning1\dbch\af11\langfe2052\dbch\af14\afs24\alang1081\loch\f6\fs24\lang1033{\afs20\rtlch \ltrch\fs20\loch\f10
 }{\afs20\rtlch \ltrch\loch\fs20\loch\f10
\tab \tab \tab \tab \tab else:\u13\'0d}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf1\kerning1\dbch\af11\langfe2052\dbch\af14\afs24\alang1081\loch\f6\fs24\lang1033{\afs20\rtlch \ltrch\loch\fs20\loch\f10
\tab \tab \tab \tab \tab \tab create and add new intensity element}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf1\kerning1\dbch\af11\langfe2052\dbch\af14\afs24\alang1081\loch\f6\fs24\lang1033{\afs20\rtlch \ltrch\loch\fs20\loch\f10
\tab \tab \tab \tab \tab subtract the median background noise value from the intensity \\}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf1\kerning1\dbch\af11\langfe2052\dbch\af14\afs24\alang1081\loch\f6\fs24\lang1033{\afs20\rtlch \ltrch\loch\fs20\loch\f10
\tab \tab \tab \tab \tab multiplied by the percent value}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf1\kerning1\dbch\af11\langfe2052\dbch\af14\afs24\alang1081\loch\f6\fs24\lang1033\rtlch \ltrch\loch\loch\f3

\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf1\kerning1\dbch\af11\langfe2052\dbch\af14\afs24\alang1081\loch\f6\fs24\lang1033{\rtlch \ltrch\loch\loch\f3
intensity_n() follows much the same route but does not calculate percents\uc2 \u8212\'81\'5cand thus does not perform antialiasing, but rather blindly adds all rounded values. This produces an intensity graph with higher y-values but this will not matter after normalization.\uc1 }
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf1\kerning1\dbch\af11\langfe2052\dbch\af14\afs24\alang1081\loch\f6\fs24\lang1033\rtlch \ltrch\loch\loch\f3

\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf1\kerning1\dbch\af11\langfe2052\dbch\af14\afs24\alang1081\loch\f6\fs24\lang1033{\rtlch \ltrch\loch\loch\f3
The intensity graph is then plotted.}
\par }